/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectdemo;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Hp
 */
public class SupplierProductCustomerInfo extends javax.swing.JFrame {

    /**
     * Creates new form SupplierProductCustomerInfo
     */
    public SupplierProductCustomerInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InfoTableCBP = new javax.swing.JTable();
        search2 = new javax.swing.JTextField();
        search3 = new javax.swing.JTextField();
        Searchfield = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(153, 153, 255));

        InfoTableCBP.setBackground(new java.awt.Color(153, 204, 255));
        InfoTableCBP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Customer_Id", "CustomerName", "BillId", "ProductName", "Amount", "OrderDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(InfoTableCBP);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 600, 140));

        search2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.add(search2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 190, -1));

        search3.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.add(search3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 190, -1));

        Searchfield.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.add(Searchfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 190, -1));

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, -1, -1));

        jButton3.setBackground(new java.awt.Color(153, 153, 255));
        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 153));
        jLabel5.setText("ProductID:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 90, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 153));
        jLabel4.setText("BillID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 90, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 153));
        jLabel2.setText("CustomerID:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 100, 20));

        jLabel3.setBackground(new java.awt.Color(0, 0, 102));
        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(176, 31, 176));
        jLabel3.setText("Information of Customer,Bills & Products");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 850, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bck.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         String CustomerId = Searchfield.getText();
           if(Searchfield.getText().isEmpty())
            {
        
                JOptionPane.showMessageDialog(null,"Field is empty!");      
            }
           else{
                
           String searchQuery = "SELECT CUSTOMER.CustomerId, Customer.CustomerName, BILLDETAILS.BillId, PRODUCT.ProductName,BILLDETAILS.Amount,Billdetails.OrderDate FROM BILLDETAILS INNER JOIN CUSTOMER ON CUSTOMER.CustomerId = BILLDETAILS.CustomerId INNER JOIN PRODUCT ON PRODUCT.ProductId= BILLDETAILS.ProductId WHERE CUSTOMER.CustomerId ='"+CustomerId+"'";
            try {
                    ConnectMSSQL conn  = new ConnectMSSQL();
                    Connection connection = conn.connectDB();
                    Statement st = connection.createStatement();
                    ResultSet rs = st.executeQuery(searchQuery);
                    InfoTableCBP.setModel(DbUtils.resultSetToTableModel(rs));
                    } catch (SQLException ex) {
                        Logger.getLogger(BillDetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String BillId = search2.getText();
           if(search2.getText().isEmpty())
            {
        
                JOptionPane.showMessageDialog(null,"Field is empty!");      
            }
           else{
                
           String searchQuery = "SELECT CUSTOMER.CustomerId, Customer.CustomerName, BILLDETAILS.BillId, PRODUCT.ProductName,BILLDETAILS.Amount,Billdetails.OrderDate FROM BILLDETAILS INNER JOIN CUSTOMER ON CUSTOMER.CustomerId = BILLDETAILS.CustomerId INNER JOIN PRODUCT ON PRODUCT.ProductId= BILLDETAILS.ProductId WHERE BILLDETAILS.BillId ='"+BillId+"'";
            try {
                    ConnectMSSQL conn  = new ConnectMSSQL();
                    Connection connection = conn.connectDB();
                    Statement st = connection.createStatement();
                    ResultSet rs = st.executeQuery(searchQuery);
                    InfoTableCBP.setModel(DbUtils.resultSetToTableModel(rs));
                    } catch (SQLException ex) {
                        Logger.getLogger(BillDetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String ProductId = search3.getText();
           if(search3.getText().isEmpty())
            {
        
                JOptionPane.showMessageDialog(null,"Field is empty!");      
            }
           else{
                
           String searchQuery = "SELECT CUSTOMER.CustomerId, Customer.CustomerName, BILLDETAILS.BillId, PRODUCT.ProductName,BILLDETAILS.Amount,Billdetails.OrderDate FROM BILLDETAILS INNER JOIN CUSTOMER ON CUSTOMER.CustomerId = BILLDETAILS.CustomerId INNER JOIN PRODUCT ON PRODUCT.ProductId= BILLDETAILS.ProductId WHERE BILLDETAILS.ProductId ='"+ProductId+"'";
            try {
                    ConnectMSSQL conn  = new ConnectMSSQL();
                    Connection connection = conn.connectDB();
                    Statement st = connection.createStatement();
                    ResultSet rs = st.executeQuery(searchQuery);
                    InfoTableCBP.setModel(DbUtils.resultSetToTableModel(rs));
                    } catch (SQLException ex) {
                        Logger.getLogger(BillDetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierProductCustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierProductCustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierProductCustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierProductCustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierProductCustomerInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InfoTableCBP;
    private javax.swing.JTextField Searchfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search2;
    private javax.swing.JTextField search3;
    // End of variables declaration//GEN-END:variables
}
